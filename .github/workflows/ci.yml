name: CI

on:
  push:
    branches:
      - '**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        project: [backend, detection]

    defaults:
      run:
        working-directory: ${{ matrix.project }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install just
        uses: extractions/setup-just@v3
        with:
          just-version: '1.26.0'
      - name: Install python
        uses: actions/setup-python@v5
        with:
          python-version-file: ${{ matrix.project }}/.python-version
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
      - name: Setup venv
        run: uv sync --locked --all-extras --dev
      - name: Lint
        run: just lint

  test:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        project: [backend, detection]

    defaults:
      run:
        working-directory: ${{ matrix.project }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install just
        uses: extractions/setup-just@v3
        with:
          just-version: '1.26.0'
      - name: Install python
        uses: actions/setup-python@v5
        with:
          python-version-file: ${{ matrix.project }}/.python-version
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
      - name: Install FFmpeg
        run: sudo apt-get update && sudo apt-get install -y ffmpeg
      - name: Setup venv
        run: uv sync --locked --all-extras --dev
      - name: Run tests
        run: just test
      - name: Upload coverage
        uses: codecov/codecov-action@v4
        with:
          working-directory: ${{ matrix.project }}
          file: ./.coverage
          fail_ci_if_error: false
